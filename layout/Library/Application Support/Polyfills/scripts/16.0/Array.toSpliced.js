"use strict";if(!Array.prototype.toSpliced){Object.defineProperty(Array.prototype,"toSpliced",{value:function value(start,deleteCount){var O=Object(this);var len=Math.max(0,Math.floor(O.length)||0);var actualStart;if(start===undefined){actualStart=0}else{var integerStart=Math.floor(start);if(integerStart<0){actualStart=Math.max(len+integerStart,0)}else{actualStart=Math.min(integerStart,len)}}var actualDeleteCount;if(deleteCount===undefined){actualDeleteCount=len-actualStart}else{var integerDeleteCount=Math.floor(deleteCount);actualDeleteCount=Math.max(0,Math.min(integerDeleteCount,len-actualStart))}var result=[];var resultIndex=0;for(var i=0;i<actualStart;i++){if(i in O){result[resultIndex]=O[i]}resultIndex++}for(var _i=0;_i<(arguments.length<=2?0:arguments.length-2);_i++){result[resultIndex]=_i+2<2||arguments.length<=_i+2?undefined:arguments[_i+2];resultIndex++}var endIndex=actualStart+actualDeleteCount;for(var _i2=endIndex;_i2<len;_i2++){if(_i2 in O){result[resultIndex]=O[_i2]}resultIndex++}result.length=resultIndex;return result},writable:true,configurable:true,enumerable:false})}