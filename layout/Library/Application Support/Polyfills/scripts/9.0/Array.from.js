"use strict";if(!Array.from){Array.from=function(){var iteratorTypes=["[object Map Iterator]","[object Set Iterator]","[object WeakMap Iterator]","[object WeakSet Iterator]"];var toStr=Object.prototype.toString;var isCallable=function isCallable(fn){return typeof fn==="function"||toStr.call(fn)==="[object Function]"};var toInteger=function toInteger(value){var number=Number(value);if(isNaN(number)){return 0}if(number===0||!isFinite(number)){return number}return(number>0?1:-1)*Math.floor(Math.abs(number))};var maxSafeInteger=Math.pow(2,53)-1;var toLength=function toLength(value){var len=toInteger(value);return Math.min(Math.max(len,0),maxSafeInteger)};return function from(arrayLike){var iteratee=function iteratee(item,k){if(mapFn){A[k]=typeof T==="undefined"?mapFn(item,k):mapFn.call(T,item,k)}else{A[k]=item}return k+1};var C=this;var items=Object(arrayLike);if(arrayLike==null){throw new TypeError("Array.from requires an array-like object - not null or undefined")}var mapFn=arguments.length>1?arguments[1]:void undefined;var T;if(typeof mapFn!=="undefined"){if(!isCallable(mapFn)){throw new TypeError("Array.from: when provided, the second argument must be a function")}if(arguments.length>2){T=arguments[2]}}var A=isCallable(C)?Object(new C(len)):new Array(len);var k=0;if(iteratorTypes.indexOf(items.toString())!==-1){var item;while(item=items.next().value)k=iteratee(item,k);A.length=k;return A}var len=toLength(items.length);while(k<len)k=iteratee(items[k],k);A.length=len;return A}}()}