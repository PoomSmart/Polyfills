"use strict";(function(){"use strict";var spec=["fullscreen","fullscreenEnabled","fullscreenElement","fullscreenchange","fullscreenerror","exitFullscreen","requestFullscreen"];var webkit=["webkitIsFullScreen","webkitFullscreenEnabled","webkitFullscreenElement","webkitfullscreenchange","webkitfullscreenerror","webkitExitFullscreen","webkitRequestFullscreen"];var fsVendorKeywords=function getFullscreenApi(){try{var fullscreenEnabledKey=[spec[1],webkit[1]].find(function(prefix){return prefix&&prefix in document});return[spec,webkit].find(function(vendor){return vendor[1]===fullscreenEnabledKey})||[]}catch(e){return[]}}();function handleEvent(eventType){try{document.dispatchEvent(new Event(eventType))}catch(e){console.warn("Fullscreen event handling failed:",e)}}function setupShim(){if(!fsVendorKeywords.length){return}try{if(!(spec[0]in document)){Object.defineProperty(document,spec[0],{configurable:true,enumerable:true,get:function get(){try{return fsVendorKeywords[0]&&document[fsVendorKeywords[0]]||fsVendorKeywords[2]&&!!document[fsVendorKeywords[2]]||false}catch(_){return false}}})}if(!(spec[1]in document)){Object.defineProperty(document,spec[1],{configurable:true,enumerable:true,get:function get(){try{return!!(fsVendorKeywords[1]&&document[fsVendorKeywords[1]])}catch(_){return false}}})}if(!(spec[2]in document)){Object.defineProperty(document,spec[2],{configurable:true,enumerable:true,get:function get(){try{return fsVendorKeywords[2]?document[fsVendorKeywords[2]]||null:null}catch(_){return null}}})}if(fsVendorKeywords[3]){document.addEventListener(fsVendorKeywords[3],handleEvent.bind(document,spec[3]),false)}if(fsVendorKeywords[4]){document.addEventListener(fsVendorKeywords[4],handleEvent.bind(document,spec[4]),false)}if(!(spec[5]in document)){document[spec[5]]=function(){try{var fn=fsVendorKeywords[5]&&document[fsVendorKeywords[5]];if(typeof fn==="function"){var ret=fn.call(document);return ret&&typeof ret.then==="function"?ret:Promise.resolve()}return Promise.reject(new DOMException("Fullscreen API not available","NotSupportedError"))}catch(e){var err=e instanceof DOMException?e:new DOMException(e&&e.message?e.message:"Failed to exit fullscreen","NotAllowedError");return Promise.reject(err)}}}if(Element.prototype&&fsVendorKeywords[6]&&!(spec[6]in Element.prototype)){Element.prototype[spec[6]]=function(){if(typeof this[fsVendorKeywords[6]]==="function"){try{var ret=this[fsVendorKeywords[6]].apply(this,arguments);return ret&&typeof ret.then==="function"?ret:Promise.resolve()}catch(e){var err=e instanceof DOMException?e:new DOMException(e&&e.message?e.message:"Failed to enter fullscreen","NotAllowedError");return Promise.reject(err)}}return Promise.reject(new DOMException("Fullscreen API not available","NotSupportedError"))}}}catch(e){console.warn("Fullscreen polyfill setup failed:",e)}}function initPolyfill(){var shouldSetup=false;try{shouldSetup=typeof document[spec[1]]==="undefined"&&fsVendorKeywords.length>0}catch(e){shouldSetup=false}if(shouldSetup){setupShim()}}if(document.readyState==="loading"){document.addEventListener("DOMContentLoaded",initPolyfill)}else{initPolyfill()}})();