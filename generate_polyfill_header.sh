#!/bin/bash
# generate_polyfill_header.sh
# It will look for .js files in /scripts/ and generate /Polyfills.h

set -e

SCRIPT_ABS_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SCRIPTS_SOURCE_DIR="$SCRIPT_ABS_DIR/scripts"
OUTPUT_H_FILE="$SCRIPT_ABS_DIR/Polyfills.h"

mkdir -p "$SCRIPTS_SOURCE_DIR"

{
  echo "// This file is auto-generated by $(basename "$0"). DO NOT EDIT."
  echo "#import <Foundation/Foundation.h>"
  echo ""
  echo -n "static NSString *polyfillScript = @\""
  echo -n "console.log('Start Polyfills');"
} > "$OUTPUT_H_FILE"

TEMP_JS_CONCAT=$(mktemp)
trap 'rm -f "$TEMP_JS_CONCAT"' EXIT

find "$SCRIPTS_SOURCE_DIR" -name "*.js" -type f -print0 | sort -z | while IFS= read -r -d $'\0' js_file; do
  grep -v '^[[:space:]]*//' "$js_file" >> "$TEMP_JS_CONCAT"
done

if [ -s "$TEMP_JS_CONCAT" ]; then
  echo "\\" >> "$OUTPUT_H_FILE"
  sed -e 's/"/\\"/g' -e 's/$/\\/' "$TEMP_JS_CONCAT" >> "$OUTPUT_H_FILE"
  truncate -s-2 "$OUTPUT_H_FILE"
  echo "\";" >> "$OUTPUT_H_FILE"
else
  echo "\";" >> "$OUTPUT_H_FILE"
fi

echo "Generated $OUTPUT_H_FILE successfully."
